version: '3.5'
services:
  api1: # API - Instância 01
    container_name: api1
    image: api
    hostname: api1
    environment:
      - DB_HOST=db
      - DB_USER=rinha
      - DB_PASSWORD=123456
      - DB_NAME=rinhadb
    depends_on:
      - db
    expose:
      - "80"
    ports:
      - "3000:80"
    # network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: '0.5GB'

  api2: # API - Instância 01
    container_name: api2
    image: api
    hostname: api2
    environment:
      - DB_HOST=db
      - DB_USER=rinha
      - DB_PASSWORD=123456
      - DB_NAME=rinhadb
    depends_on:
      - db
    expose:
      - "80"
    ports:
      - "3001:80"
    # network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: '0.5GB'

  nginx: # Load Balancer
    container_name: nginx
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    # network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.30'
          memory: '0.5GB'

  db: # Banco de dados
   container_name: postgres
   image: postgres
   environment:
     POSTGRES_USER: rinha
     POSTGRES_PASSWORD: 123456
     POSTGRES_DB: rinhadb
   command: postgres -c 'max_connections=450'
  #  network_mode: host
   volumes:
     - ./db.sql:/docker-entrypoint-initdb.d/db.sql
   ports:
    - "5444:5432"
   deploy:
      resources:
        limits:
          cpus: '1'
          memory: '1.5GB'
